package com.kaige123.daomu.DAO.Bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class VcommentExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public VcommentExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andVmidIsNull() {
            addCriterion("vmid is null");
            return (Criteria) this;
        }

        public Criteria andVmidIsNotNull() {
            addCriterion("vmid is not null");
            return (Criteria) this;
        }

        public Criteria andVmidEqualTo(Long value) {
            addCriterion("vmid =", value, "vmid");
            return (Criteria) this;
        }

        public Criteria andVmidNotEqualTo(Long value) {
            addCriterion("vmid <>", value, "vmid");
            return (Criteria) this;
        }

        public Criteria andVmidGreaterThan(Long value) {
            addCriterion("vmid >", value, "vmid");
            return (Criteria) this;
        }

        public Criteria andVmidGreaterThanOrEqualTo(Long value) {
            addCriterion("vmid >=", value, "vmid");
            return (Criteria) this;
        }

        public Criteria andVmidLessThan(Long value) {
            addCriterion("vmid <", value, "vmid");
            return (Criteria) this;
        }

        public Criteria andVmidLessThanOrEqualTo(Long value) {
            addCriterion("vmid <=", value, "vmid");
            return (Criteria) this;
        }

        public Criteria andVmidIn(List<Long> values) {
            addCriterion("vmid in", values, "vmid");
            return (Criteria) this;
        }

        public Criteria andVmidNotIn(List<Long> values) {
            addCriterion("vmid not in", values, "vmid");
            return (Criteria) this;
        }

        public Criteria andVmidBetween(Long value1, Long value2) {
            addCriterion("vmid between", value1, value2, "vmid");
            return (Criteria) this;
        }

        public Criteria andVmidNotBetween(Long value1, Long value2) {
            addCriterion("vmid not between", value1, value2, "vmid");
            return (Criteria) this;
        }

        public Criteria andUidIsNull() {
            addCriterion("uid is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("uid is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(Long value) {
            addCriterion("uid =", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(Long value) {
            addCriterion("uid <>", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(Long value) {
            addCriterion("uid >", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Long value) {
            addCriterion("uid >=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThan(Long value) {
            addCriterion("uid <", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(Long value) {
            addCriterion("uid <=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidIn(List<Long> values) {
            addCriterion("uid in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<Long> values) {
            addCriterion("uid not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(Long value1, Long value2) {
            addCriterion("uid between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(Long value1, Long value2) {
            addCriterion("uid not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andViceIsNull() {
            addCriterion("vice is null");
            return (Criteria) this;
        }

        public Criteria andViceIsNotNull() {
            addCriterion("vice is not null");
            return (Criteria) this;
        }

        public Criteria andViceEqualTo(Long value) {
            addCriterion("vice =", value, "vice");
            return (Criteria) this;
        }

        public Criteria andViceNotEqualTo(Long value) {
            addCriterion("vice <>", value, "vice");
            return (Criteria) this;
        }

        public Criteria andViceGreaterThan(Long value) {
            addCriterion("vice >", value, "vice");
            return (Criteria) this;
        }

        public Criteria andViceGreaterThanOrEqualTo(Long value) {
            addCriterion("vice >=", value, "vice");
            return (Criteria) this;
        }

        public Criteria andViceLessThan(Long value) {
            addCriterion("vice <", value, "vice");
            return (Criteria) this;
        }

        public Criteria andViceLessThanOrEqualTo(Long value) {
            addCriterion("vice <=", value, "vice");
            return (Criteria) this;
        }

        public Criteria andViceIn(List<Long> values) {
            addCriterion("vice in", values, "vice");
            return (Criteria) this;
        }

        public Criteria andViceNotIn(List<Long> values) {
            addCriterion("vice not in", values, "vice");
            return (Criteria) this;
        }

        public Criteria andViceBetween(Long value1, Long value2) {
            addCriterion("vice between", value1, value2, "vice");
            return (Criteria) this;
        }

        public Criteria andViceNotBetween(Long value1, Long value2) {
            addCriterion("vice not between", value1, value2, "vice");
            return (Criteria) this;
        }

        public Criteria andCommenttextIsNull() {
            addCriterion("commentText is null");
            return (Criteria) this;
        }

        public Criteria andCommenttextIsNotNull() {
            addCriterion("commentText is not null");
            return (Criteria) this;
        }

        public Criteria andCommenttextEqualTo(String value) {
            addCriterion("commentText =", value, "commenttext");
            return (Criteria) this;
        }

        public Criteria andCommenttextNotEqualTo(String value) {
            addCriterion("commentText <>", value, "commenttext");
            return (Criteria) this;
        }

        public Criteria andCommenttextGreaterThan(String value) {
            addCriterion("commentText >", value, "commenttext");
            return (Criteria) this;
        }

        public Criteria andCommenttextGreaterThanOrEqualTo(String value) {
            addCriterion("commentText >=", value, "commenttext");
            return (Criteria) this;
        }

        public Criteria andCommenttextLessThan(String value) {
            addCriterion("commentText <", value, "commenttext");
            return (Criteria) this;
        }

        public Criteria andCommenttextLessThanOrEqualTo(String value) {
            addCriterion("commentText <=", value, "commenttext");
            return (Criteria) this;
        }

        public Criteria andCommenttextLike(String value) {
            addCriterion("commentText like", value, "commenttext");
            return (Criteria) this;
        }

        public Criteria andCommenttextNotLike(String value) {
            addCriterion("commentText not like", value, "commenttext");
            return (Criteria) this;
        }

        public Criteria andCommenttextIn(List<String> values) {
            addCriterion("commentText in", values, "commenttext");
            return (Criteria) this;
        }

        public Criteria andCommenttextNotIn(List<String> values) {
            addCriterion("commentText not in", values, "commenttext");
            return (Criteria) this;
        }

        public Criteria andCommenttextBetween(String value1, String value2) {
            addCriterion("commentText between", value1, value2, "commenttext");
            return (Criteria) this;
        }

        public Criteria andCommenttextNotBetween(String value1, String value2) {
            addCriterion("commentText not between", value1, value2, "commenttext");
            return (Criteria) this;
        }

        public Criteria andCommentdateIsNull() {
            addCriterion("commentDate is null");
            return (Criteria) this;
        }

        public Criteria andCommentdateIsNotNull() {
            addCriterion("commentDate is not null");
            return (Criteria) this;
        }

        public Criteria andCommentdateEqualTo(Date value) {
            addCriterion("commentDate =", value, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateNotEqualTo(Date value) {
            addCriterion("commentDate <>", value, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateGreaterThan(Date value) {
            addCriterion("commentDate >", value, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateGreaterThanOrEqualTo(Date value) {
            addCriterion("commentDate >=", value, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateLessThan(Date value) {
            addCriterion("commentDate <", value, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateLessThanOrEqualTo(Date value) {
            addCriterion("commentDate <=", value, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateIn(List<Date> values) {
            addCriterion("commentDate in", values, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateNotIn(List<Date> values) {
            addCriterion("commentDate not in", values, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateBetween(Date value1, Date value2) {
            addCriterion("commentDate between", value1, value2, "commentdate");
            return (Criteria) this;
        }

        public Criteria andCommentdateNotBetween(Date value1, Date value2) {
            addCriterion("commentDate not between", value1, value2, "commentdate");
            return (Criteria) this;
        }

        public Criteria andStarIsNull() {
            addCriterion("Star is null");
            return (Criteria) this;
        }

        public Criteria andStarIsNotNull() {
            addCriterion("Star is not null");
            return (Criteria) this;
        }

        public Criteria andStarEqualTo(Integer value) {
            addCriterion("Star =", value, "star");
            return (Criteria) this;
        }

        public Criteria andStarNotEqualTo(Integer value) {
            addCriterion("Star <>", value, "star");
            return (Criteria) this;
        }

        public Criteria andStarGreaterThan(Integer value) {
            addCriterion("Star >", value, "star");
            return (Criteria) this;
        }

        public Criteria andStarGreaterThanOrEqualTo(Integer value) {
            addCriterion("Star >=", value, "star");
            return (Criteria) this;
        }

        public Criteria andStarLessThan(Integer value) {
            addCriterion("Star <", value, "star");
            return (Criteria) this;
        }

        public Criteria andStarLessThanOrEqualTo(Integer value) {
            addCriterion("Star <=", value, "star");
            return (Criteria) this;
        }

        public Criteria andStarIn(List<Integer> values) {
            addCriterion("Star in", values, "star");
            return (Criteria) this;
        }

        public Criteria andStarNotIn(List<Integer> values) {
            addCriterion("Star not in", values, "star");
            return (Criteria) this;
        }

        public Criteria andStarBetween(Integer value1, Integer value2) {
            addCriterion("Star between", value1, value2, "star");
            return (Criteria) this;
        }

        public Criteria andStarNotBetween(Integer value1, Integer value2) {
            addCriterion("Star not between", value1, value2, "star");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table vcomment
     *
     * @mbg.generated do_not_delete_during_merge Sat Oct 13 11:12:28 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table vcomment
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}