package com.kaige123.daomu.DAO.Bean;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserlogExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public UserlogExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUlidIsNull() {
            addCriterion("ulid is null");
            return (Criteria) this;
        }

        public Criteria andUlidIsNotNull() {
            addCriterion("ulid is not null");
            return (Criteria) this;
        }

        public Criteria andUlidEqualTo(String value) {
            addCriterion("ulid =", value, "ulid");
            return (Criteria) this;
        }

        public Criteria andUlidNotEqualTo(String value) {
            addCriterion("ulid <>", value, "ulid");
            return (Criteria) this;
        }

        public Criteria andUlidGreaterThan(String value) {
            addCriterion("ulid >", value, "ulid");
            return (Criteria) this;
        }

        public Criteria andUlidGreaterThanOrEqualTo(String value) {
            addCriterion("ulid >=", value, "ulid");
            return (Criteria) this;
        }

        public Criteria andUlidLessThan(String value) {
            addCriterion("ulid <", value, "ulid");
            return (Criteria) this;
        }

        public Criteria andUlidLessThanOrEqualTo(String value) {
            addCriterion("ulid <=", value, "ulid");
            return (Criteria) this;
        }

        public Criteria andUlidLike(String value) {
            addCriterion("ulid like", value, "ulid");
            return (Criteria) this;
        }

        public Criteria andUlidNotLike(String value) {
            addCriterion("ulid not like", value, "ulid");
            return (Criteria) this;
        }

        public Criteria andUlidIn(List<String> values) {
            addCriterion("ulid in", values, "ulid");
            return (Criteria) this;
        }

        public Criteria andUlidNotIn(List<String> values) {
            addCriterion("ulid not in", values, "ulid");
            return (Criteria) this;
        }

        public Criteria andUlidBetween(String value1, String value2) {
            addCriterion("ulid between", value1, value2, "ulid");
            return (Criteria) this;
        }

        public Criteria andUlidNotBetween(String value1, String value2) {
            addCriterion("ulid not between", value1, value2, "ulid");
            return (Criteria) this;
        }

        public Criteria andUidIsNull() {
            addCriterion("uid is null");
            return (Criteria) this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("uid is not null");
            return (Criteria) this;
        }

        public Criteria andUidEqualTo(Long value) {
            addCriterion("uid =", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotEqualTo(Long value) {
            addCriterion("uid <>", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThan(Long value) {
            addCriterion("uid >", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Long value) {
            addCriterion("uid >=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThan(Long value) {
            addCriterion("uid <", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidLessThanOrEqualTo(Long value) {
            addCriterion("uid <=", value, "uid");
            return (Criteria) this;
        }

        public Criteria andUidIn(List<Long> values) {
            addCriterion("uid in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotIn(List<Long> values) {
            addCriterion("uid not in", values, "uid");
            return (Criteria) this;
        }

        public Criteria andUidBetween(Long value1, Long value2) {
            addCriterion("uid between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andUidNotBetween(Long value1, Long value2) {
            addCriterion("uid not between", value1, value2, "uid");
            return (Criteria) this;
        }

        public Criteria andLogintimeIsNull() {
            addCriterion("logintime is null");
            return (Criteria) this;
        }

        public Criteria andLogintimeIsNotNull() {
            addCriterion("logintime is not null");
            return (Criteria) this;
        }

        public Criteria andLogintimeEqualTo(Date value) {
            addCriterion("logintime =", value, "logintime");
            return (Criteria) this;
        }

        public Criteria andLogintimeNotEqualTo(Date value) {
            addCriterion("logintime <>", value, "logintime");
            return (Criteria) this;
        }

        public Criteria andLogintimeGreaterThan(Date value) {
            addCriterion("logintime >", value, "logintime");
            return (Criteria) this;
        }

        public Criteria andLogintimeGreaterThanOrEqualTo(Date value) {
            addCriterion("logintime >=", value, "logintime");
            return (Criteria) this;
        }

        public Criteria andLogintimeLessThan(Date value) {
            addCriterion("logintime <", value, "logintime");
            return (Criteria) this;
        }

        public Criteria andLogintimeLessThanOrEqualTo(Date value) {
            addCriterion("logintime <=", value, "logintime");
            return (Criteria) this;
        }

        public Criteria andLogintimeIn(List<Date> values) {
            addCriterion("logintime in", values, "logintime");
            return (Criteria) this;
        }

        public Criteria andLogintimeNotIn(List<Date> values) {
            addCriterion("logintime not in", values, "logintime");
            return (Criteria) this;
        }

        public Criteria andLogintimeBetween(Date value1, Date value2) {
            addCriterion("logintime between", value1, value2, "logintime");
            return (Criteria) this;
        }

        public Criteria andLogintimeNotBetween(Date value1, Date value2) {
            addCriterion("logintime not between", value1, value2, "logintime");
            return (Criteria) this;
        }

        public Criteria andLoginipIsNull() {
            addCriterion("loginIp is null");
            return (Criteria) this;
        }

        public Criteria andLoginipIsNotNull() {
            addCriterion("loginIp is not null");
            return (Criteria) this;
        }

        public Criteria andLoginipEqualTo(String value) {
            addCriterion("loginIp =", value, "loginip");
            return (Criteria) this;
        }

        public Criteria andLoginipNotEqualTo(String value) {
            addCriterion("loginIp <>", value, "loginip");
            return (Criteria) this;
        }

        public Criteria andLoginipGreaterThan(String value) {
            addCriterion("loginIp >", value, "loginip");
            return (Criteria) this;
        }

        public Criteria andLoginipGreaterThanOrEqualTo(String value) {
            addCriterion("loginIp >=", value, "loginip");
            return (Criteria) this;
        }

        public Criteria andLoginipLessThan(String value) {
            addCriterion("loginIp <", value, "loginip");
            return (Criteria) this;
        }

        public Criteria andLoginipLessThanOrEqualTo(String value) {
            addCriterion("loginIp <=", value, "loginip");
            return (Criteria) this;
        }

        public Criteria andLoginipLike(String value) {
            addCriterion("loginIp like", value, "loginip");
            return (Criteria) this;
        }

        public Criteria andLoginipNotLike(String value) {
            addCriterion("loginIp not like", value, "loginip");
            return (Criteria) this;
        }

        public Criteria andLoginipIn(List<String> values) {
            addCriterion("loginIp in", values, "loginip");
            return (Criteria) this;
        }

        public Criteria andLoginipNotIn(List<String> values) {
            addCriterion("loginIp not in", values, "loginip");
            return (Criteria) this;
        }

        public Criteria andLoginipBetween(String value1, String value2) {
            addCriterion("loginIp between", value1, value2, "loginip");
            return (Criteria) this;
        }

        public Criteria andLoginipNotBetween(String value1, String value2) {
            addCriterion("loginIp not between", value1, value2, "loginip");
            return (Criteria) this;
        }

        public Criteria andLoginprovinceIsNull() {
            addCriterion("loginProvince is null");
            return (Criteria) this;
        }

        public Criteria andLoginprovinceIsNotNull() {
            addCriterion("loginProvince is not null");
            return (Criteria) this;
        }

        public Criteria andLoginprovinceEqualTo(String value) {
            addCriterion("loginProvince =", value, "loginprovince");
            return (Criteria) this;
        }

        public Criteria andLoginprovinceNotEqualTo(String value) {
            addCriterion("loginProvince <>", value, "loginprovince");
            return (Criteria) this;
        }

        public Criteria andLoginprovinceGreaterThan(String value) {
            addCriterion("loginProvince >", value, "loginprovince");
            return (Criteria) this;
        }

        public Criteria andLoginprovinceGreaterThanOrEqualTo(String value) {
            addCriterion("loginProvince >=", value, "loginprovince");
            return (Criteria) this;
        }

        public Criteria andLoginprovinceLessThan(String value) {
            addCriterion("loginProvince <", value, "loginprovince");
            return (Criteria) this;
        }

        public Criteria andLoginprovinceLessThanOrEqualTo(String value) {
            addCriterion("loginProvince <=", value, "loginprovince");
            return (Criteria) this;
        }

        public Criteria andLoginprovinceLike(String value) {
            addCriterion("loginProvince like", value, "loginprovince");
            return (Criteria) this;
        }

        public Criteria andLoginprovinceNotLike(String value) {
            addCriterion("loginProvince not like", value, "loginprovince");
            return (Criteria) this;
        }

        public Criteria andLoginprovinceIn(List<String> values) {
            addCriterion("loginProvince in", values, "loginprovince");
            return (Criteria) this;
        }

        public Criteria andLoginprovinceNotIn(List<String> values) {
            addCriterion("loginProvince not in", values, "loginprovince");
            return (Criteria) this;
        }

        public Criteria andLoginprovinceBetween(String value1, String value2) {
            addCriterion("loginProvince between", value1, value2, "loginprovince");
            return (Criteria) this;
        }

        public Criteria andLoginprovinceNotBetween(String value1, String value2) {
            addCriterion("loginProvince not between", value1, value2, "loginprovince");
            return (Criteria) this;
        }

        public Criteria andLogincityIsNull() {
            addCriterion("loginCity is null");
            return (Criteria) this;
        }

        public Criteria andLogincityIsNotNull() {
            addCriterion("loginCity is not null");
            return (Criteria) this;
        }

        public Criteria andLogincityEqualTo(String value) {
            addCriterion("loginCity =", value, "logincity");
            return (Criteria) this;
        }

        public Criteria andLogincityNotEqualTo(String value) {
            addCriterion("loginCity <>", value, "logincity");
            return (Criteria) this;
        }

        public Criteria andLogincityGreaterThan(String value) {
            addCriterion("loginCity >", value, "logincity");
            return (Criteria) this;
        }

        public Criteria andLogincityGreaterThanOrEqualTo(String value) {
            addCriterion("loginCity >=", value, "logincity");
            return (Criteria) this;
        }

        public Criteria andLogincityLessThan(String value) {
            addCriterion("loginCity <", value, "logincity");
            return (Criteria) this;
        }

        public Criteria andLogincityLessThanOrEqualTo(String value) {
            addCriterion("loginCity <=", value, "logincity");
            return (Criteria) this;
        }

        public Criteria andLogincityLike(String value) {
            addCriterion("loginCity like", value, "logincity");
            return (Criteria) this;
        }

        public Criteria andLogincityNotLike(String value) {
            addCriterion("loginCity not like", value, "logincity");
            return (Criteria) this;
        }

        public Criteria andLogincityIn(List<String> values) {
            addCriterion("loginCity in", values, "logincity");
            return (Criteria) this;
        }

        public Criteria andLogincityNotIn(List<String> values) {
            addCriterion("loginCity not in", values, "logincity");
            return (Criteria) this;
        }

        public Criteria andLogincityBetween(String value1, String value2) {
            addCriterion("loginCity between", value1, value2, "logincity");
            return (Criteria) this;
        }

        public Criteria andLogincityNotBetween(String value1, String value2) {
            addCriterion("loginCity not between", value1, value2, "logincity");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userlog
     *
     * @mbg.generated do_not_delete_during_merge Sat Oct 13 11:12:28 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table userlog
     *
     * @mbg.generated Sat Oct 13 11:12:28 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}